{"version":3,"sources":["Components/Forms/Form.js","Components/Widgets/WindowElem.js","Components/Widgets/RemoveItem.js","Components/Products/ProductList.js","Components/Modal/Modal.js","App.js","index.js"],"names":["Form","prodIdtitle","uuid","prodIdDesc","prodIdSize","prodIdokGoogle","state","title","desc","size","okGoogle","product","handleCheck","e","target","name","checked","console","log","setState","handleChange","value","handleChangeAllInputs","type","handleSubmit","preventDefault","id","description","props","addNewProduct","resetForm","this","onSubmit","htmlFor","onChange","disabled","Component","GadgetWindow","unitRef","isOpen","toggleState","keydownHandler","handleClick","handleDelete","textObj","content","backBtn","deleteBtn","flipId","ref","tabIndex","undefined","role","className","onClick","onKeyDown","defaultProps","DeleteButton","createRef","prev","current","focus","event","key","onDelete","flipKey","spring","stagger","text","ProductList","products","onDeleteProduct","map","Modal","handleClose","toggleModal","children","createPortal","s","backDrop","document","getElementById","App","counter","showModal","allProducts","obj","prevState","deleteProduct","filter","prod","localProducts","localStorage","getItem","parseProducts","JSON","parse","prevProps","setItem","stringify","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a7c02ad1.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { v4 as uuid } from 'uuid';\n\nexport class Form extends Component {\n  prodIdtitle = uuid();\n  prodIdDesc = uuid();\n  prodIdSize = uuid();\n  prodIdokGoogle = uuid();\n\n  state = {\n    title: '',\n    desc: '',\n    size: '',\n\n    okGoogle: false,\n\n    product: null,\n  };\n\n  handleCheck = e => {\n    // console.log('value:', e.target.value); // нам не надо\n    const { name, checked } = e.target;\n    const { okGoogle } = this.state;\n    console.log('name:', name);\n    console.log('checked:', checked);\n    this.setState({\n      okGoogle: !okGoogle,\n    });\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleChangeAllInputs = e => {\n    const { name, type, checked, value } = e.target;\n    this.setState({ [name]: type === 'checkbox' ? checked : value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { title, desc, size } = this.state;\n    const product = {\n      id: uuid(),\n      title,\n      description: desc,\n      size,\n    };\n    this.setState({ product });\n    this.props.addNewProduct(product); // !!!метод из App!!!\n    this.resetForm();\n  };\n  resetForm = () => {\n    this.setState({ ...this.state });\n  };\n\n  render() {\n    const { title, desc, size, okGoogle } = this.state;\n    const {\n      handleChangeAllInputs,\n      handleSubmit,\n      prodIdtitle,\n      prodIdDesc,\n      prodIdSize,\n      prodIdokGoogle,\n    } = this;\n\n    return (\n      <form onSubmit={handleSubmit}>\n        <label htmlFor={prodIdtitle}>Title</label>\n        <input\n          type=\"text\"\n          id={prodIdtitle}\n          name=\"title\"\n          value={title}\n          onChange={handleChangeAllInputs}\n        />\n        <br />\n        <label htmlFor={prodIdDesc}>Description</label>\n        <input\n          type=\"text\"\n          id={prodIdDesc}\n          name=\"desc\"\n          value={desc}\n          onChange={handleChangeAllInputs}\n        />\n        <br />\n        <label htmlFor={prodIdSize}>Choose your size</label>\n        <select\n          name=\"size\"\n          value={size}\n          onChange={handleChangeAllInputs}\n          id={prodIdSize}\n        >\n          <option value=\"\" disabled>\n            ...\n          </option>\n          <option value=\"s\">s</option>\n          <option value=\"m\">m</option>\n          <option value=\"l\">l</option>\n        </select>\n        <br />\n        <label htmlFor={prodIdokGoogle}>Agree?</label>\n        <input\n          type=\"checkbox\"\n          name=\"okGoogle\"\n          id={prodIdokGoogle}\n          checked={okGoogle}\n          onChange={handleChangeAllInputs}\n        />\n        <br />\n        <button type=\"submit\" disabled={!okGoogle}>\n          add\n        </button>\n      </form>\n    );\n  }\n}","import { Flipped } from \"react-flip-toolkit\";\nimport PropTypes from \"prop-types\";\n\nexport function GadgetWindow({\n  unitRef,\n  isOpen,\n  toggleState,\n  keydownHandler,\n  handleClick,\n  handleDelete,\n  textObj: { title, content, backBtn, deleteBtn },\n}) {\n  return (\n    <Flipped flipId=\"wrapper\">\n      <div\n        ref={unitRef}\n        // в тернарном операторе false заменен на undefined\n        tabIndex={isOpen ? undefined : 0}\n        role=\"dialog\"\n        className={`dialog animated-in`}\n        onClick={toggleState}\n        onKeyDown={keydownHandler}\n      >\n        <p className=\"title content\">{title}</p>\n        <p className=\"content\">{content}</p>\n        <button className=\"button secondary content\" onClick={handleClick}>\n          {backBtn}\n        </button>\n        <button className=\"button primary content\" onClick={handleDelete}>\n          {deleteBtn}\n        </button>\n      </div>\n    </Flipped>\n  );\n}\n\nGadgetWindow.defaultProps = {\n  textObj: {\n    title: \"Delete this item?\",\n    content:\n      \"This operation will permenantly delete this item and all its dependencies. This actioncannot be undone\",\n    backBtn: \"Oh no, bring me back\",\n    deleteBtn: \"I understand, delete it\",\n  },\n};\nGadgetWindow.propTypes = {\n  ref: PropTypes.any,\n  isOpen: PropTypes.bool,\n  toggleState: PropTypes.func,\n  keydownHandler: PropTypes.func,\n  handleClick: PropTypes.func,\n  textObj: PropTypes.shape({\n    title: PropTypes.string,\n    content: PropTypes.string,\n    backBtn: PropTypes.string,\n    deleteBtn: PropTypes.string,\n  }),\n};\n","import { Component, createRef } from 'react';\nimport { Flipper, Flipped } from 'react-flip-toolkit';\nimport './RemoveItem.scss';\nimport { GadgetWindow } from './WindowElem';\n\nexport class DeleteButton extends Component {\n  state = {\n    isOpen: this.props.isOpen,\n  };\n  // получаем доступ к текущему элементу через createRef()\n  ref = createRef();\n\n  // создаем метод изменения свойства видимости в стейте\n  toggleState = () => {\n    //  если текущее значение true выходим из метода\n    if (this.state.isOpen) return;\n    // изменяем стейт от предыдущего состояния\n    this.setState(prev => ({\n      isOpen: !prev.isOpen,\n    }));\n    // фокусируемся на текущем элементе\n    this.ref.current.focus();\n  };\n\n  keydownHandler = event => {\n    if (event.key === 'Enter' || event.key === 'Escape') {\n      this.toggleState();\n    }\n  };\n\n  handleClick = () => this.setState({ isOpen: false });\n\n  // ===  Добавляем обработчик клика для кнопки Delete и вызываем полученный через пропс\n  // метод удаления продукта и передаем его же полученный id\n  handleDelete = () => {\n    this.props.onDelete(this.props.id);\n    this.setState({ isOpen: false });\n  };\n\n  render() {\n    const { isOpen } = this.state;\n    const {\n      ref,\n      keydownHandler,\n      toggleState,\n      handleClick,\n      // деструктуризируем handleDelete\n      handleDelete,\n    } = this;\n    return (\n      <Flipper flipKey={isOpen} spring=\"stiff\" stagger>\n        {isOpen ? (\n          <GadgetWindow\n            unitRef={ref}\n            isOpen={isOpen}\n            toggleState={toggleState}\n            keydownHandler={keydownHandler}\n            handleClick={handleClick}\n            // === передаем обработчик клика для кнопки Delete\n            handleDelete={handleDelete}\n            textObj={this.props.text}\n          />\n        ) : (\n          <Flipped flipId=\"wrapper\">\n            <div\n              ref={ref}\n              tabIndex={0}\n              role=\"button\"\n              className=\"button primary\"\n              onClick={toggleState}\n              onKeyDown={keydownHandler}\n            >\n              <Flipped flipId=\"action\">\n                <span className=\"action\">Delete</span>\n              </Flipped>\n            </div>\n          </Flipped>\n        )}\n      </Flipper>\n    );\n  }\n}","import { DeleteButton } from \"../Widgets/RemoveItem\"\r\nexport function ProductList({ products, onDeleteProduct }) {\r\n    return (\r\n        <>\r\n            <h2>Product List</h2>\r\n            <ul>\r\n                {products.map(product => {\r\n                    return (\r\n                        <li key={product.id}>\r\n                            <h3>{product.title}</h3>\r\n                            <p>{product.description}</p>\r\n                            <DeleteButton onDelete={onDeleteProduct} id={product.id }/>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </>\r\n    )\r\n}","import { Component } from \"react\";\r\nimport s from './Modal.scss';\r\nimport { createPortal } from \"react-dom\";\r\n\r\n\r\nexport class Modal extends Component{\r\n    handleClose = (e) =>\r\n    {\r\n    if (e.target.className === 'backDrop') {\r\n        this.toggleModal();\r\n    }\r\n    }\r\n\r\n    render() {\r\n        const { children, toggleModal } = this.props;\r\n        return createPortal(\r\n            <div className={s.backDrop} onClick={this.handleClose}>\r\n        <div className={s.content}>{children}</div>\r\n      </div>,\r\n      document.getElementById('modalRoot'),\r\n        )\r\n    }\r\n}","import \"./App.scss\";\nimport { Component } from \"react\";\nimport { Form } from \"./Components/Forms/Form\";\nimport {ProductList} from './Components/Products/ProductList'\nimport { Modal } from \"./Components/Modal/Modal\";\n\n// import { DeleteButton } from './components/Widgets/RemoveItem';\n// import { Counter } from './components/Counter/Counter';\n\n// const text = {\n//   title: 'title-1',\n//   content: 'content-1',\n//   backBtn: 'go back',\n//   deleteBtn: 'delete',\n// };\n\nclass App extends Component {\n  state = {\n    counter: 0,\n    isOpen: false,\n    showModal: false,\n    allProducts: [],\n  };\n\n  componentDidMount() {\n    console.log('MOUNT')\n    const localProducts = localStorage.getItem('products')\n    const parseProducts = JSON.parse(localProducts)\n    this.setState({allProducts: parseProducts})\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('UPDATE')\n    // если изменилось значение поля стейта prevState.prop\n    // то будем переписывато локал сторадж\n    if (prevState.allProducts !== this.state.allProducts) {\n      localStorage.setItem('products', JSON.stringify(\n        this.state.allProducts))\n    }\n  };\n\n  componentWillUnmount() {\n    console.log('UNMOUNT')\n  }\n  \n  \n\n  addNewProduct = obj => \n    this.setState(prevState => ({\n      \n        allProducts: [...prevState.allProducts, obj]\n      \n    }\n  ));\n\n  deleteProduct = id => \n    this.setState(prev => ({\n      allProducts: prev.allProducts.filter(prod=>prod.id!==id)\n    }))\n  \n  toggleModal = () => {\n    this.setState({showModal: !this.state.showModal})\n  }\n  // handleDecrement = () => {\n  //   // просто перепишем текущий стейт\n  //   // this.setState({\n  //   //   counter: this.state.counter - 1,\n  //   // })\n  //   // если нужно отталкиваться от предыдущего значения\n  //   // this.setState((prevState) => {\n  //   //   return {\n  //   //     counter: prevState.counter - 1,\n  //   //   }\n  //   // })\n  //   // или короче\n  //   if (this.state.counter > 0) {\n  //     this.setState(prevState => ({\n  //       counter: prevState.counter - 1,\n  //     }));\n  //   }\n  // };\n  // handleIncrement = () => {\n  //   this.setState(prevState => ({\n  //     counter: prevState.counter + 1,\n  //   }));\n  // };\n\n  render() {\n    console.log('RENDER METHOD')\n    // console.log(\"state:\", this.state.title, this.state.desc);\n    return (\n      <div className=\"App\">\n        {this.state.showModal && (<Modal toggleModal={this.toggleModal}>\n          <Form addNewProduct={this.addNewProduct} />\n        </Modal>)}\n        <h1>FE-35 Product</h1>\n        <button type='button' onClick={this.toggleModal}> Add product</button>\n        <ProductList products={this.state.allProducts} onDeleteProduct={this.deleteProduct}/>\n      </div>\n    );\n  }\n}\nexport default App;\n\n// const { counter, isOpen } = this.state;\n// const { handleDecrement, handleIncrement } = this;\n// {/* <DeleteButton isOpen={!isOpen} text={text} />\n// <DeleteButton isOpen={isOpen} /> */}\n// {/* <Counter\n//   counter={counter}\n//   handleDecrement={handleDecrement}\n//   handleIncrement={handleIncrement}\n// /> */}\n\n// click => onClick\n// submit => onSubmit\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}